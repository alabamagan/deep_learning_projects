[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "Cython>=0.29.0",
    "numpy>=1.19.0"
]
build-backend = "setuptools.build_meta"

[project]
name = "rAIdiologist"
version = "0.1.0"
description = "A Python package for automated analysis of radiological images using deep learning"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ML Wong", email = "lun.m.wong@cuhk.edu.hk"}
]
maintainers = [
    {name = "ML Wong", email = "lun.m.wong@cuhk.edu.hk"}
]
keywords = [
    "medical imaging",
    "radiology",
    "deep learning",
    "pytorch",
    "image analysis",
    "segmentation",
    "classification"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing"
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.9.0",
    "torchvision>=0.10.0",
    "numpy>=1.19.0",
    "Cython>=0.29.0",
    "PyYAML>=5.4.0",
    "tqdm>=4.62.0",
    "matplotlib>=3.3.0",
    "scikit-learn>=1.0.0",
    "pandas>=1.3.0",
    "opencv-python>=4.5.0",
    "pillow>=8.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.12",
    "black>=21.0",
    "flake8>=3.9",
    "mypy>=0.910",
    "pre-commit>=2.15"
]
ui = [
    "streamlit>=1.0.0",
    "plotly>=5.0.0",
    "dash>=2.0.0"
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "sphinxcontrib-napoleon>=0.7"
]

[project.scripts]
rAIdiologist = "rAIdiologist.main:main"
rAIdiologist-infer = "rAIdiologist.cli.cli_inference:main"
rAIdiologist-normalize = "rAIdiologist.cli.cli_normalize_input:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["rAIdiologist*", "pytorch_med_imaging*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
rAIdiologist = ["config/**/*.yaml", "config/**/*.yml"]

# Cython 擴展設定 (基於您的 setup.py)
[tool.cython]
language_level = 3

# 測試設定
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]

# 程式碼格式設定
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".tox",
    ".coverage",
    ".coverage.*",
    ".cache",
    "nosetests.xml",
    "coverage.xml",
    "*.cover",
    "*.log",
    ".venv"
]

# MyPy 類型檢查設定
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*",
    "cv2.*",
    "matplotlib.*",
    "sklearn.*"
]
ignore_missing_imports = true